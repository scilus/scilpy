usage: scil_viz_volume_screenshot.py [-h]
                                     [--volume_cmap_name VOLUME_CMAP_NAME]
                                     [--volume_opacity VOLUME_OPACITY]
                                     [--transparency TRANSPARENCY]
                                     [--slices SID [SID ...]]
                                     [--axis {sagittal,coronal,axial}]
                                     [--size WIDTH HEIGHT]
                                     [--display_slice_number] [--display_lr]
                                     [--labelmap LABELMAP]
                                     [--labelmap_cmap_name LABELMAP_CMAP_NAME]
                                     [--labelmap_opacity LABELMAP_OPACITY]
                                     [--overlays OVERLAYS [OVERLAYS ...]]
                                     [--overlays_as_contours]
                                     [--overlays_colors R G B [R G B ...]]
                                     [--overlays_opacity OVERLAYS_OPACITY]
                                     [--peaks PEAKS [PEAKS ...]]
                                     [--peaks_width PEAKS_WIDTH]
                                     [--peaks_opacity PEAKS_OPACITY]
                                     [-v [{DEBUG,INFO,WARNING}]]
                                     volume out_fname

Take screenshot(s) of one or more slices in a given image volume along the
requested axis. If slice indices are not provided, all slices in the volume
are used. The name of the output images are suffixed with _slice_{id}, with
id being the slice number in the volume. If a labelmap image is provided (e.g.
a tissue segmentation map), it is overlaid on the volume slices. Same goes if
a mask is provided, with the difference that it can be rendered as a
transparency overlay as well as a contour.

A labelmap image can be provided as the image volume, without requiring it as
the optional argument if only the former needs to be plot.

Example:
>>> scil_viz_volume_screenshot.py t1.nii.gz t1_axial_annotated.png
    --display_slice_number --display_lr

>>> scil_viz_volume_screenshot.py t1.nii.gz t1_axial_masked.png
    --transparency brainmask.nii.gz

>>> scil_viz_volume_screenshot.py t1.nii.gz t1_axial.png
    --slices 30 40 50 60 70 80 90 100

>>> scil_viz_volume_screenshot.py t1.nii.gz t1_sagittal.png --axis sagittal

>>> scil_viz_volume_screenshot.py t1.nii.gz t1_axial_plasma_cmap.png
    --slices 30 40 50 60 70 80 90 100 --volume_cmap_name plasma

>>> scil_viz_volume_screenshot.py t1.nii.gz t1_mask_overlay.png
    --slices 30 40 50 60 70 80 90 100 --overlays brain_mask.nii.gz

>>> scil_viz_volume_screenshot.py t1.nii.gz t1_mask_contour.png
    --slices 30 40 50 60 70 80 90 100
    --overlays brain_mask.nii.gz --overlays_as_contours

>>> scil_viz_volume_screenshot.py t1.nii.gz t1_axial_tissue_map.png
    --slices 30 40 50 60 70 80 90 100 --labelmap tissue_map.nii.gz

>>> scil_viz_volume_screenshot.py t1.nii.gz t1_axial_tissue_viridis_cmap.png
    --slices 30 40 50 60 70 80 90 100
    --labelmap tissue_map.nii.gz --labelmap_cmap_name viridis

>>> scil_viz_volume_screenshot.py t1.nii.gz t1_axial_peaks.png
    --slices 30 40 50 60 70 80 90 100 --peaks peaks.nii.gz --volume_opacity 0.5

positional arguments:
  volume                Input 3D Nifti file (.nii/.nii.gz).
  out_fname             Name of the output image(s). If multiple slices are provided (or none), their index will be append to the name (e.g. volume.jpg, volume.png becomes volume_slice_0.jpg, volume_slice_0.png).

options:
  -h, --help            show this help message and exit
  --transparency TRANSPARENCY
                        Transparency Nifti image (.nii/.nii.gz). Can either be a binary mask or a scalar image in the range [0, 1].
  --size WIDTH HEIGHT   Size of the output image. [(768, 768)]
  -v [{DEBUG,INFO,WARNING}]
                        Produces verbose output depending on the provided level. 
                        Default level is warning, default when using -v is info.

Slicing:
  --slices SID [SID ...]
                        Slice indices to screenshot. If None are supplied, all slices inside the transparency mask are selected.
  --axis {sagittal,coronal,axial}
                        Name of the axis to visualize. [axial]

Input overlays:
  --labelmap LABELMAP   Input labelmap file (.nii/.nii.gz).
  --overlays OVERLAYS [OVERLAYS ...]
                        3D Nifti image(s) to overlay (.nii/.nii.gz).
  --peaks PEAKS [PEAKS ...]
                        Peaks Nifti image (.nii/.nii.gz).

Volume rendering:
  --volume_cmap_name VOLUME_CMAP_NAME
                        Colormap name for the 3D Nifti image data. [None]
  --volume_opacity VOLUME_OPACITY
                        Opacity value for the 3D Nifti image data. [1.0]
  --labelmap_cmap_name LABELMAP_CMAP_NAME
                        Colormap name for the labelmap image data. [viridis]
  --labelmap_opacity LABELMAP_OPACITY
                        Opacity value for the labelmap image data. [0.5]

Peaks rendering:
  --peaks_width PEAKS_WIDTH
                        Width of the peaks lines. [3.0]
  --peaks_opacity PEAKS_OPACITY
                        Opacity value for the peaks overlay. [1.0]

Overlay rendering:
  --overlays_as_contours
                        Display overlays contours and reduce the opacity of their inner region (see the `--overlays_opacity` argument).
  --overlays_colors R G B [R G B ...]
                        Colors for the overlays or contours. You may provide a single color, for all overlays/contours, or one color for each. Each color is given as three values: R G B
  --overlays_opacity OVERLAYS_OPACITY
                        Opacity value for the masks overlays. When combined with `--overlays_as_contours`, this will be the opacity of the region inside the computed contours. [0.5]

Annotations:
  --display_slice_number
                        If true, displays the slice number in the upper left corner.
  --display_lr          If true, add left and right annotations to the images.

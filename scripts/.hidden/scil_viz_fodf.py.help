usage: scil_viz_fodf.py [-h] [--slice_index SLICE_INDEX]
                        [--win_dims WIDTH HEIGHT]
                        [--interactor {image,trackball}]
                        [--axis_name {sagittal,coronal,axial}] [--silent]
                        [--in_transparency_mask IN_TRANSPARENCY_MASK]
                        [--output OUTPUT] [-f]
                        [--sh_basis {descoteaux07,tournier07,descoteaux07_legacy,tournier07_legacy}]
                        [--sphere {repulsion724,symmetric362,symmetric642,repulsion200,repulsion100,symmetric724}]
                        [--sph_subdivide SPH_SUBDIVIDE] [--mask MASK]
                        [--colormap COLORMAP | --color_rgb COLOR_RGB COLOR_RGB COLOR_RGB]
                        [--scale SCALE] [--radial_scale_off] [--norm_off]
                        [-v [{DEBUG,INFO,WARNING}]] [--background BACKGROUND]
                        [--bg_range MIN MAX] [--bg_opacity BG_OPACITY]
                        [--bg_offset BG_OFFSET]
                        [--bg_interpolation {nearest,linear}]
                        [--bg_color BG_COLOR BG_COLOR BG_COLOR]
                        [--peaks PEAKS]
                        [--peaks_color PEAKS_COLOR PEAKS_COLOR PEAKS_COLOR]
                        [--peaks_width PEAKS_WIDTH]
                        [--peaks_values PEAKS_VALUES | --peaks_length PEAKS_LENGTH]
                        [--variance VARIANCE] [--variance_k VARIANCE_K]
                        [--var_color VAR_COLOR VAR_COLOR VAR_COLOR]
                        in_fodf

Visualize 2-dimensional fODF slice loaded from disk.

Given an image of SH coefficients, this script displays a slice in a
given orientation. The user can also add a background on top of which the
fODF are to be displayed. Using a full SH basis, the script can be used to
visualize asymmetric fODF. The user can supply a peaks image to visualize
peaks on top of fODF.

If a transparency_mask is given (e.g. a brain mask), all values outside the
mask non-zero values are set to full transparency in the saved scene.

!!! CAUTION !!! The script is memory intensive about (9kB of allocated RAM per
voxel, or 9GB for a 1M voxel volume) with a sphere interpolated to 362 points.

positional arguments:
  in_fodf               Input SH image file.

options:
  -h, --help            show this help message and exit
  --slice_index SLICE_INDEX
                        Index of the slice to visualize along a given axis. Defaults to middle of volume.
  --win_dims WIDTH HEIGHT
                        The dimensions for the vtk window. [(768, 768)]
  --interactor {image,trackball}
                        Specify interactor mode for vtk window. [trackball]
  --axis_name {sagittal,coronal,axial}
                        Name of the axis to visualize. [axial]
  --silent              Disable interactive visualization.
  --in_transparency_mask IN_TRANSPARENCY_MASK
                        Input mask image file.
  --output OUTPUT       Path to output file.
  -f                    Force overwriting of the output files.
  --sh_basis {descoteaux07,tournier07,descoteaux07_legacy,tournier07_legacy}
                        Spherical harmonics basis used for the SH coefficients. 
                        Must be either descoteaux07', 'tournier07', 
                        'descoteaux07_legacy' or 'tournier07_legacy' [['descoteaux07_legacy']]:
                            'descoteaux07'       : SH basis from the Descoteaux et al.
                                                   MRM 2007 paper
                            'tournier07'         : SH basis from the new Tournier et al.
                                                   NeuroImage 2019 paper, as in MRtrix 3.
                            'descoteaux07_legacy': SH basis from the legacy Dipy implementation
                                                   of the Descoteaux et al. MRM 2007 paper
                            'tournier07_legacy'  : SH basis from the legacy Tournier et al.
                                                   NeuroImage 2007 paper.
  --sphere {repulsion724,symmetric362,symmetric642,repulsion200,repulsion100,symmetric724}
                        Name of the sphere used to reconstruct SF. [symmetric362]
  --sph_subdivide SPH_SUBDIVIDE
                        Number of subdivisions for given sphere. If not supplied, use the given sphere as is.
  --mask MASK           Optional mask file. Only fODF inside the mask are displayed.
  --colormap COLORMAP   Colormap for the ODF slicer. If None, then a RGB colormap will be used. [None]
  --color_rgb COLOR_RGB COLOR_RGB COLOR_RGB
                        Uniform color for the ODF slicer given as RGB, scaled between 0 and 1. [None]
  --scale SCALE         Scaling factor for FODF. [0.5]
  --radial_scale_off    Disable radial scale for ODF slicer.
  --norm_off            Disable normalization of ODF slicer.
  -v [{DEBUG,INFO,WARNING}]
                        Produces verbose output depending on the provided level. 
                        Default level is warning, default when using -v is info.

Background arguments:
  --background BACKGROUND
                        Background image file. If RGB, values must be between 0 and 255.
  --bg_range MIN MAX    The range of values mapped to range [0, 1] for background image. [(bg.min(), bg.max())]
  --bg_opacity BG_OPACITY
                        The opacity of the background image. Opacity of 0.0 means transparent and 1.0 is completely visible. [1.0]
  --bg_offset BG_OFFSET
                        The offset of the background image. [0.5]
  --bg_interpolation {nearest,linear}
                        Interpolation mode for the background image. [nearest]
  --bg_color BG_COLOR BG_COLOR BG_COLOR
                        The color of the overall background, behind everything. Must be RGB values scaled between 0 and 1. [(0, 0, 0)]

Peaks arguments:
  --peaks PEAKS         Peaks image file.
  --peaks_color PEAKS_COLOR PEAKS_COLOR PEAKS_COLOR
                        Color used for peaks, as RGB values scaled between 0 and 1. If None, then a RGB colormap is used. [None]
  --peaks_width PEAKS_WIDTH
                        Width of peaks segments. [1.0]

Peaks scaling arguments:
  Choose between peaks values and arbitrary length.

  --peaks_values PEAKS_VALUES
                        Peaks values file.
  --peaks_length PEAKS_LENGTH
                        Length of the peaks segments. [0.65]

Variance arguments:
  For the visualization of fodf uncertainty, the variance is used as follow: mean + k * sqrt(variance), where mean is the input fodf (in_fodf) and k is the scaling factor (variance_k).

  --variance VARIANCE   FODF variance file.
  --variance_k VARIANCE_K
                        Scaling factor (k) for the computation of the fodf uncertainty. [1]
  --var_color VAR_COLOR VAR_COLOR VAR_COLOR
                        Color of variance outline. Must be RGB values scaled between 0 and 1. [(1, 1, 1)]

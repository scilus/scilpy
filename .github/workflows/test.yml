name: Scilpy test suite

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  MPLBACKEND: agg
  OPENBLAS_NUM_THREADS: 1

jobs:
  test:
    runs-on: scilus-bigmem-runners
    if: github.repository == 'scilus/scilpy'

    steps:
      - name: Checkout repository at merge
        uses: actions/checkout@v4

      - name: Fetch python version from repository
        id: python-selector
        run: echo "python-version=$(head -1 .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python and uv for Scilpy
        uses: astral-sh/setup-uv@v6.4.3
        with:
          python-version: ${{ steps.python-selector.outputs.python-version }}
          activate-environment: true
          enable-cache: true

      - name: Install non-python dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            curl \
            git \
            libblas-dev \
            liblapack-dev \
            libfreetype6-dev \
            libdrm-dev \
            libgl1-mesa-dev \
            libosmesa6-dev

      - name: stdlib checkout
        if: ${{ !contains(steps.python-selector.outputs.python-version, '3.12') }}
        run: |
          echo "SETUPTOOLS_USE_DISTUTILS=stdlib" >> "$GITHUB_ENV"

      - name: Install Scilpy
        run: |
          uv pip install --upgrade pip wheel
          uv pip install --upgrade "setuptools<71.0.0" 
          uv pip install -e .
          # TODO: to adapt once Scilpy passes to VTK 9.4.0, which selects OSMesa at runtime
          # https://discourse.vtk.org/t/status-update-runtime-opengl-render-window-selection-in-vtk/14583
          VTK_VERSION=$(cat pyproject.toml | grep 'vtk==' | sed 's/vtk==//g' | sed 's/\"//g' )
          uv pip install --extra-index-url https://wheels.vtk.org vtk-osmesa==$VTK_VERSION
          uv pip install pytest-xdist pytest-cov
      - name: Run tests
        run: |
          export C_INCLUDE_PATH=$pythonLocation/include/python${{ steps.python-selector.outputs.python-version }}:$C_INCLUDE_PATH
          scil_data_download
          uv run --active pytest --cov-report term-missing:skip-covered

      - name: Save test results and coverage
        uses: actions/upload-artifact@v4
        id: test-coverage-results
        with:
          name: test-coverage-${{ github.run_id }}
          retention-days: 1
          include-hidden-files: true
          path: |
            .coverage
            .test_reports/

  coverage:
    runs-on: ubuntu-latest
    if: github.repository == 'scilus/scilpy'
    needs: test

    steps:
      - name: Checkout repository at merge
        uses: actions/checkout@v4

      - name: Download test results and coverage
        uses: actions/download-artifact@v4
        with:
          name: test-coverage-${{ github.run_id }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: scilpy-unittests-${{ github.run_id }}-${{ github.run_attempt }}
          verbose: true
          fail_ci_if_error: true
